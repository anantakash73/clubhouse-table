{"version":3,"sources":["Table.js","App.js","reportWebVitals.js","index.js"],"names":["Styles","styled","div","Table","columns","data","useState","filterInput","setFilterInput","useTable","useFilters","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","setFilter","value","onChange","e","target","undefined","placeholder","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","className","isSorted","isSortedDesc","render","row","i","getRowProps","cells","cell","index","Header","getCellProps","original","names","App","members","useMemo","accessor","Cell","src","width","projects","tipText","memberData","setMemberData","projectsData","setProjectData","getData","a","axios","result","projectResult","useEffect","interval","setInterval","clearInterval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5213ef8.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport {useTable, useFilters, useSortBy } from \"react-table\";\nimport styled from \"styled-components\";\n\nconst Styles = styled.div`\n  //padding: 1rem;\n  //\n  //table {\n  //  border-spacing: 0;\n  //  border: 1px solid black;\n  //\n  //  tr {\n  //    :last-child {\n  //      td {\n  //        border-bottom: 0;\n  //      }\n  //    }\n  //  }\n  //\n  //  th,\n  //  td {\n  //    margin: 0;\n  //    padding: 0.5rem;\n  //    border-bottom: 1px solid black;\n  //    border-right: 1px solid black;\n  //    position: relative;\n  //\n  //    :last-child {\n  //      border-right: 0;\n  //    }\n  //  }\n\n    /* My New CSS for Tooltip */\n    .new-tooltip span {\n      visibility: hidden;\n      width: 400px;\n      background-color: black;\n      color: #fff;\n      text-align: center;\n      border-radius: 6px;\n      padding: 5px 0;\n      position: absolute;\n      z-index: 1;\n      bottom: 80%;\n      left: 50%;\n      margin-left: -60px;\n      cursor: pointer;\n    }\n\n    .new-tooltip:hover span {\n      visibility: visible;\n    }\n  }\n`;\n\nexport default function Table({ columns, data}) {\n    const [filterInput, setFilterInput] = useState(\"\");\n\n    const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    setFilter\n} = useTable({\n    columns,\n    data\n},\n    useFilters,\n    useSortBy\n)\n    const handleFilterChange = e => {\n        const value = e.target.value || undefined;\n        setFilter(\"name\", value);\n        setFilterInput(value)\n    };\nreturn (\n    <Styles>\n        <input\n            value={filterInput}\n            onChange={handleFilterChange}\n            placeholder={\"Search name\"}\n        />\n    <table {...getTableProps()}>\n        <thead>\n        {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map(column => (\n                    <th {...column.getHeaderProps(column.getSortByToggleProps())}\n                    className={\n                        column.isSorted ? column.isSortedDesc ? \"sort-desc\" : \"sort-asc\" : \"\"\n                    }\n                    >{column.render(\"Header\")}</th>\n                ))}\n            </tr>\n        ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n            prepareRow(row);\n            return (\n                <tr {...row.getRowProps()}>\n                    {row.cells.map((cell, index) => {\n                        if (cell.column.Header === \"Followers\") {\n                            return <td className=\"new-tooltip\" {...cell.getCellProps()}>{cell.render(\"Cell\")}{<span>{row.original.names}</span>}</td>\n                        }\n                        else{\n                            return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                    }})}\n                </tr>\n            )\n        })}\n        </tbody>\n    </table>\n    </Styles>\n)\n}","import React, {useState, useEffect, useMemo} from \"react\";\nimport Table from \"./Table\";\nimport './App.css';\nimport axios from \"axios\";\n\nfunction App() {\n    const members = useMemo(\n        () => [\n            {\n                Header: \"Members\",\n                columns: [\n                    {\n                        Header: \"Name\",\n                        accessor: \"name\"\n                    },\n                    {\n                        Header: \"Username\",\n                        accessor: \"username\",\n                    },\n                    {\n                        Header: \"Admin\",\n                        accessor: \"admin\"\n                    },\n                    {\n                        Header: \"Active\",\n                        accessor: \"active\"\n                    },\n                    {\n                        Header: \"Two Factor enabled\",\n                        accessor: \"2fa\"\n                    },\n                    {\n                        Header: \"Emails\",\n                        accessor: \"email\"\n                    },\n                    {\n                        Header: \"Image\",\n                        accessor: \"image\",\n                        Cell: ({ cell: {value}}) => (\n                                <img\n                                    src={value + \"?token=5ff521dc-81d8-42db-9910-08651e89b4be\"}\n                                    width={60}\n                                />\n                        )\n                    },\n                ]\n            },\n        ],\n        []\n    );\n    const projects = useMemo(\n        () => [\n            {\n                Header: \"Projects\",\n                columns: [\n                    {\n                        Header: \"Name\",\n                        accessor: \"name\"\n                    },\n                    {\n                        Header: \"Team\",\n                        accessor: \"team\",\n                    },\n                    {\n                        Header: \"Stories\",\n                        accessor: \"stories\"\n                    },\n                    {\n                        Header: \"Followers\",\n                        accessor: \"followers\",\n                        tipText: \"tooltip text\"\n                    },\n                    {\n                        Header: \"Active\",\n                        accessor: \"active\"\n                    }\n                ]\n            },\n        ],\n        []\n    );\n\n    const [memberData, setMemberData] = useState([]);\n    const [projectsData, setProjectData] = useState([])\n\n    const getData = async () => {\n        const result = await axios(\"/members\", )\n        setMemberData(result.data);\n        const projectResult = await axios(\"/projects\")\n        setProjectData(projectResult.data)\n    }\n    useEffect(() => {\n        getData()\n\n        const interval = setInterval(() => {\n            getData()\n        }, 60000)\n\n        return()=>clearInterval(interval)\n    }, [])\n  return (\n    <div className=\"App\">\n    <Table columns={members} data={memberData} />\n    <Table columns={projects} data={projectsData} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}